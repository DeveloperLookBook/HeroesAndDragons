// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Data;

namespace ServerApp.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20181119191635_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServerApp.Models.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Character");
                });

            modelBuilder.Entity("ServerApp.Models.Hits.Hit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int?>("SourceId");

                    b.Property<short>("Strength");

                    b.Property<int?>("TargetId");

                    b.Property<int?>("WeaponId");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Hits");
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<short>("Strength");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Weapon");
                });

            modelBuilder.Entity("ServerApp.Models.Characters.Dragons.Dragon", b =>
                {
                    b.HasBaseType("ServerApp.Models.Characters.Character");

                    b.Property<short>("Health");

                    b.ToTable("Dragon");

                    b.HasDiscriminator().HasValue("Dragon");

                    b.HasData(
                        new { Id = 19, Name = "Dragon1", Health = (short)80 },
                        new { Id = 20, Name = "Dragon2", Health = (short)85 },
                        new { Id = 21, Name = "Dragon3", Health = (short)90 },
                        new { Id = 22, Name = "Dragon4", Health = (short)95 },
                        new { Id = 23, Name = "Dragon5", Health = (short)100 },
                        new { Id = 24, Name = "Dragon6", Health = (short)93 },
                        new { Id = 25, Name = "Dragon7", Health = (short)87 },
                        new { Id = 26, Name = "Dragon8", Health = (short)82 },
                        new { Id = 27, Name = "Dragon9", Health = (short)86 },
                        new { Id = 28, Name = "Dragon10", Health = (short)89 },
                        new { Id = 29, Name = "Dragon11", Health = (short)92 },
                        new { Id = 30, Name = "Dragon12", Health = (short)98 },
                        new { Id = 31, Name = "Dragon13", Health = (short)91 },
                        new { Id = 32, Name = "Dragon14", Health = (short)99 },
                        new { Id = 33, Name = "Dragon15", Health = (short)91 },
                        new { Id = 34, Name = "Dragon16", Health = (short)87 },
                        new { Id = 35, Name = "Dragon17", Health = (short)80 },
                        new { Id = 36, Name = "Dragon18", Health = (short)85 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Characters.Heroes.Hero", b =>
                {
                    b.HasBaseType("ServerApp.Models.Characters.Character");

                    b.Property<int?>("WeaponId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("WeaponId");

                    b.ToTable("Hero");

                    b.HasDiscriminator().HasValue("Hero");

                    b.HasData(
                        new { Id = 1, Name = "Hero1", WeaponId = 1 },
                        new { Id = 2, Name = "Hero2", WeaponId = 2 },
                        new { Id = 3, Name = "Hero3", WeaponId = 3 },
                        new { Id = 4, Name = "Hero4", WeaponId = 4 },
                        new { Id = 5, Name = "Hero5", WeaponId = 5 },
                        new { Id = 6, Name = "Hero6", WeaponId = 6 },
                        new { Id = 7, Name = "Hero7", WeaponId = 7 },
                        new { Id = 8, Name = "Hero8", WeaponId = 8 },
                        new { Id = 9, Name = "Hero9", WeaponId = 9 },
                        new { Id = 10, Name = "Hero10", WeaponId = 10 },
                        new { Id = 11, Name = "Hero11", WeaponId = 11 },
                        new { Id = 12, Name = "Hero12", WeaponId = 12 },
                        new { Id = 13, Name = "Hero13", WeaponId = 13 },
                        new { Id = 14, Name = "Hero14", WeaponId = 14 },
                        new { Id = 15, Name = "Hero15", WeaponId = 15 },
                        new { Id = 16, Name = "Hero16", WeaponId = 16 },
                        new { Id = 17, Name = "Hero17", WeaponId = 17 },
                        new { Id = 18, Name = "Hero18", WeaponId = 18 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Axes.Axe", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Axe");

                    b.HasDiscriminator().HasValue("Axe");

                    b.HasData(
                        new { Id = 1, Created = new DateTime(2018, 11, 19, 21, 16, 34, 618, DateTimeKind.Local), Name = "Axe", Strength = (short)15 },
                        new { Id = 2, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Axe", Strength = (short)15 },
                        new { Id = 3, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Axe", Strength = (short)15 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Crossbows.Crossbow", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Crossbow");

                    b.HasDiscriminator().HasValue("Crossbow");

                    b.HasData(
                        new { Id = 4, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Crossbow", Strength = (short)20 },
                        new { Id = 5, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Crossbow", Strength = (short)20 },
                        new { Id = 6, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Crossbow", Strength = (short)20 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Knives.Knive", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Knive");

                    b.HasDiscriminator().HasValue("Knive");

                    b.HasData(
                        new { Id = 7, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Knive", Strength = (short)8 },
                        new { Id = 8, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Knive", Strength = (short)8 },
                        new { Id = 9, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Knive", Strength = (short)8 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Rapiers.Rapier", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Rapier");

                    b.HasDiscriminator().HasValue("Rapier");

                    b.HasData(
                        new { Id = 10, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Rapier", Strength = (short)12 },
                        new { Id = 11, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Rapier", Strength = (short)12 },
                        new { Id = 12, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Rapier", Strength = (short)12 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Shields.Shield", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Shield");

                    b.HasDiscriminator().HasValue("Shield");

                    b.HasData(
                        new { Id = 13, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Shield", Strength = (short)15 },
                        new { Id = 14, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Shield", Strength = (short)15 },
                        new { Id = 15, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Shield", Strength = (short)15 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Weapons.Swords.Sword", b =>
                {
                    b.HasBaseType("ServerApp.Models.Weapons.Weapon");


                    b.ToTable("Sword");

                    b.HasDiscriminator().HasValue("Sword");

                    b.HasData(
                        new { Id = 16, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Sword", Strength = (short)20 },
                        new { Id = 17, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Sword", Strength = (short)20 },
                        new { Id = 18, Created = new DateTime(2018, 11, 19, 21, 16, 34, 623, DateTimeKind.Local), Name = "Sword", Strength = (short)20 }
                    );
                });

            modelBuilder.Entity("ServerApp.Models.Hits.Hit", b =>
                {
                    b.HasOne("ServerApp.Models.Characters.Character", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("ServerApp.Models.Characters.Character", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.HasOne("ServerApp.Models.Weapons.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("ServerApp.Models.Characters.Heroes.Hero", b =>
                {
                    b.HasOne("ServerApp.Models.Weapons.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId");
                });
#pragma warning restore 612, 618
        }
    }
}
